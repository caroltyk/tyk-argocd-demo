apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "30"
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: infrastructure
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 55.0.0
    helm:
      valuesObject:
        grafana:
          ingress:
            enabled: "true"
            ingressClassName: "nginx"
            hosts:
              - "k8s-grafana.org"
          plugins:
            - grafana-opensearch-datasource
          persistence:
            enabled: true
            type: sts
            storageClassName: "do-block-storage"
            accessModes:
              - ReadWriteOnce
            size: 20Gi
            finalizers:
              - kubernetes.io/pvc-protection
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Prometheus
                  uid: prometheus
                  type: prometheus
                  url: 'http://prometheus-stack-kube-prom-prometheus.monitoring:9090'
                  editable: true
                  isDefault: true
                  jsonData:
                    exemplarTraceIdDestinations:
                      - datasourceUid: webstore-traces
                        name: trace_id
        
                      - url: http://k8s-jaeger.org/jaeger/ui/trace/$${__value.raw}
                        name: trace_id
                        urlDisplayLabel: View in Jaeger UI
        
                - name: Jaeger
                  uid: jaeger
                  type: jaeger
                  url: 'http://jaeger-all-in-one-query.monitoring:16686/jaeger/ui'
                  editable: true
                  isDefault: false
        
                - name: OpenSearch
                  type: grafana-opensearch-datasource
                  uid: grafana-opensearch-datasource
                  url: 'http://otel-demo-opensearch.otel-demo:9200/'
                  access: proxy
                  editable: true
                  isDefault: false
                  jsonData:
                    database: otel
                    flavor: opensearch
                    logLevelField: severity
                    logMessageField: body
                    pplEnabled: true
                    timeField: observedTimestamp
                    version: 2.13.0
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
                - name: 'default'
                  orgId: 1
                  folder: ''
                  type: file
                  disableDeletion: false
                  editable: true
                  options:
                    path: /var/lib/grafana/dashboards/default
            dashboard.yml:
              apiVersion: 1
              providers:
              - name: 'Tyk API Gateway'
                orgId: 1
                folder: ''
                folderUid: ''
                type: file
                disableDeletion: false
                editable: true
                updateIntervalSeconds: 10
                options:
                  path: /etc/grafana/provisioning/dashboards
          dashboardsConfigMaps:
            default: 'otel-demo-grafana-dashboards'
            tyk: 'tyk-dashboard-cm'
          resources:
            limits:
              memory: 150Mi
        prometheus:
          ingress:
            enabled: "true"
            ingressClassName: "nginx"
            hosts:
              - "k8s-prometheus.org"
          prometheusSpec:
            enableFeatures:
              - otlp-write-receiver
  syncPolicy:
    syncOptions:
    - ServerSideApply=true
    automated: 
      prune: true