apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tyk-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "50"
  finalizers:
    # The default behaviour is foreground cascading deletion
    - resources-finalizer.argocd.argoproj.io
    # Alternatively, you can use background cascading deletion
    # - resources-finalizer.argocd.argoproj.io/background
spec:
  destination:
    server: https://kubernetes.default.svc
  project: infrastructure
  source:
    chart: tyk-stack
    repoURL: https://helm.tyk.io/public/helm/charts
    targetRevision: 1.4.0
    helm:
      valuesObject:
        global:
          components:
            bootstrap: true
            pump: true
            devPortal: false
          adminUser:
            useSecretName: admin-secrets
          tls:
            dashboard: false
            gateway: false
            useDefaultTykCertificate: false
          secrets:
            useSecretName: my-secrets
            devPortal: "tyk-dev-portal-conf"
          redis:
            addrs:
              - redis-master:6379
            passSecret:
              name: redis-password-secret
              keyName: redis-password
          mongo:
            driver: mongo-go
            mongoURL: mongodb://mongo-mongodb:27017/tyk_analytics
          storageType: mongo
        tyk-gateway:
          gateway:
            hostName: tyk-stack-gw.org
            #tls:
            #  secretName: tyk-stack-gw-tls-secret
            #  insecureSkipVerify: false
            #  certificatesMountPath: "/etc/certs/tyk-gateway"
            #  # certificates is an array of strings, used to set TYK_GW_HTTPSERVEROPTIONS_CERTIFICATES
            #  certificates:
            #    - domain_name: "*"
            #      cert_file: "/etc/certs/tyk-gateway/tls.crt"
            #      key_file: "/etc/certs/tyk-gateway/tls.key"
            control:
              enabled: true
            ingress:
              enabled: "true"
              className: nginx
              annotations:
                cert-manager.io/issuer: letsencrypt-nginx
              hosts:
                - host: tyk-stack-gw.159.65.212.135.nip.io
                  paths:
                    - path: /
                      pathType: ImplementationSpecific
              tls:
                - secretName: letsencrypt-nginx
                  hosts:
                    - "tyk-stack-gw.159.65.212.135.nip.io"
            opentelemetry:
              enabled: "true"
              endpoint: "opentelemetry-collector.monitoring.svc:4317"
            extraVolumes:
              - name: self-signed-ca
                secret:
                  secretName: my-bundle
            extraVolumeMounts: 
              - name: self-signed-ca
                mountPath: "/etc/ssl/certs/trust-bundle.pem"
                subPath: trust-bundle.pem
        tyk-bootstrap:
          bootstrap:
            sslInsecureSkipVerify: true
        tyk-pump:
          pump:
            backend:
              - "prometheus"
              - "mongo"
            uptimePumpBackend: "mongo"
            prometheusPump:
              prometheusOperator:
                enabled: true
        tyk-dashboard:
          dashboard:
            useShardedAnalytics: true
            #tls:
            #  secretName: tyk-stack-dashboard-tls-secret
            #  insecureSkipVerify: false
            #  certificatesMountPath: "/etc/certs/tyk-dashboard"
            #  certificates:
            #    - domain_name: "*"
            #      cert_file: "/etc/certs/tyk-dashboard/tls.crt"
            #      key_file: "/etc/certs/tyk-dashboard/tls.key"
            ingress:
              enabled: "true"
              className: nginx
              annotations:
                cert-manager.io/issuer: letsencrypt-nginx
              hosts:
                - host: tyk-stack-dashboard.159.65.212.135.nip.io
                  paths:
                    - path: /
                      pathType: ImplementationSpecific
              tls:
                - secretName: letsencrypt-nginx
                  hosts:
                    - "tyk-stack-dashboard.159.65.212.135.nip.io"
            tib:
              enabled: true
            extraEnvs:
              - name: TYK_DB_USESHARDEDANLAYTICS
                value: "true"
            extraVolumes:
              - name: self-signed-ca
                secret:
                  secretName: my-bundle
            extraVolumeMounts: 
              - name: self-signed-ca
                mountPath: "/etc/ssl/certs/trust-bundle.pem"
                subPath: trust-bundle.pem
        tyk-dev-portal:
          useSecretName: "tyk-dev-portal-secret"
          image:
            tag: v1.9.0
          ingress:
            enabled: true
            className: "nginx"
            hosts:
              - host: tyk-stack-dev-portal.org
                paths:
                  - path: /
                    pathType: ImplementationSpecific
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
    automated:
      prune: false