global:
  components:
    bootstrap: true
    pump: false
    devPortal: false
    operator: false
  adminUser:
    firstName: Default User
    lastName: Demo
    email: default@demo.com
    password: topsecretpassword
  secrets:
    useSecretName: tyk-cp-conf
  redis:
    addrs:
      - redis-cp-master:6379
    pass: topsecretpassword
  postgres:
    host: postgres-cp-postgresql
    port: 5432
    user: postgres
    password: topsecretpassword
    database: tyk_analytics
    sslmode: disable
  storageType: postgres
  mdcbSynchronizer:
    enabled: true
tyk-dashboard:
  dashboard:
    hostName: tyk-cp-dashboard.org
    ingress:
      enabled: "true"
      className: nginx
      annotations:
        cert-manager.io/issuer: letsencrypt-nginx
      hosts:
        - host: tyk-cp-dashboard-159.65.212.135.nip.io
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - secretName: letsencrypt-nginx
          hosts:
            - "tyk-cp-dashboard-159.65.212.135.nip.io"
    tib:
      enabled: "true"
    extraEnvs:
      - name: TYK_DB_SECURITY_OPENPOLICY_ENABLED
        value: "true"
      - name: TYK_DB_SECURITY_OPENPOLICY_ENABLEAPI
        value: "true"
      - name: TYK_DB_SECURITY_ALLOWADMINRESETPASSWORD
        value: "true"
tyk-mdcb:
  mdcb:
    useSecretName: tyk-cp-conf
    replicaCount: 1
    tls:
      # enables ssl for mdcb
      useSSL: "true"
      
      # the path to where the keys will be mounted in the pod
      certificatesMountPath: "/etc/certs"

      # location to pem encoded private key
      certificateKeyFile: "/etc/certs/tls.key"

      # location to pem encoded certificate
      certificateCertFile: "/etc/certs/tls.crt"

      # the name of the secret
      secretName: "mdcb-tls-secret"

      # the name of the volume
      volumeName: "mdcb-tls-secret-volume"
    
    http_ingress:
      enabled: true
      # className specifies your ingress controller class name below
      className: "nginx"
      # annotations specifies annotations to be added on Ingress resource.
      annotations:
        kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      # hosts corresponds to the rules to be added on Ingress rules.
      hosts:
        - host: tyk-mdcb.org
          paths:
            - path: /
              pathType: ImplementationSpecific
      # tls corresponds to the tls configuration if Ingress rules use TLS
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

    security:
      # EnableHTTPSecureEndpoints enables HTTP endpoints for monitoring and debugging MDCB.
      # Secure endpoints providing critical system information are disabled by default for security enhancement.
      # Authentication via the `Secret` is required for access, e.g., /dataplanes for dataplane details.
      enableHttpSecureEndpoints: true

tyk-dev-portal:
  useSecretName: tyk-cp-conf
  hostName: tyk-cp-dev-portal.org
  ingress:
    enabled: "true"
    className: nginx
    annotations:
      cert-manager.io/issuer: letsencrypt-nginx
    hosts:
      - host: tyk-cp-dev-portal-159.65.212.135.nip.io
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: letsencrypt-nginx
        hosts:
          - "tyk-cp-dev-portal-159.65.212.135.nip.io"