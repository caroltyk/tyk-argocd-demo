grafana:
  ingress:
    enabled: "true"
    ingressClassName: "nginx"
    hosts:
      - "k8s-grafana.org"
  additionalDataSources:
    - name: Prometheus2
      uid: webstore-metrics
      type: prometheus
      url: 'http://prometheus-stack-kube-prom-prometheus.monitoring:9090'
      editable: true
      isDefault: false
      jsonData:
        exemplarTraceIdDestinations:
          - datasourceUid: webstore-traces
            name: trace_id
          - url: http://k8s-jaeger.org/jaeger/ui/trace/$${__value.raw}
            name: trace_id
            urlDisplayLabel: View in Jaeger UI
    - name: Jaeger
      uid: webstore-traces
      type: jaeger
      url: 'http://jaeger-all-in-one-query.monitoring:16686/jaeger/ui'
      editable: true
      isDefault: false
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'Tyk API Gateway'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/tyk
        - name: 'Otel Demo'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/otel-demo
  dashboardsConfigMaps:
    tyk: 'tyk-dashboard-cm'
    otel-demo: 'oteldemo-dashboard-cm'
  resources:
    limits:
      memory: 150Mi

prometheus:
  ingress:
    enabled: "true"
    ingressClassName: "nginx"
    hosts:
      - "k8s-prometheus.org"
  prometheusSpec:
    scrapeTimeout: "3s"
    scrapeInterval: "5s"
    evaluationInterval: "30s"
    tsdb:
      out_of_order_time_window: 30m
    enableFeatures:
      - otlp-write-receiver
      - exemplar-storage
    additionalScrapeConfigsSecret:
      enabled: true
      name: additional-scrape-configs
      key: prometheus-additional.yaml

additionalPrometheusRulesMap:
  tyk-rule:
    groups:
      - name: tyk
        rules:
          - record: task:http_response_error_count
            expr: tyk_http_requests_total{response_code=~"5[0-9]{2}"}
          - record: task:http_response_total_count
            expr: tyk_http_requests_total{response_code=~"[0-9]{3}"}
          - record: task:http_response_error_rate
            expr: sum by (job,api_name) (rate(task:http_response_error_count[1m]))
      - name: slo_metrics
        rules:
          - record: job:slo_errors_per_request:ratio_rate10m
            expr: sum by (job,api_name) (rate(task:http_response_error_count[10m])) / sum by (job,api_name) (rate(task:http_response_total_count[10m]))
          - record: job:error_budget:remaining
            expr: (1 - job:slo_errors_per_request:ratio_rate10m) * 100